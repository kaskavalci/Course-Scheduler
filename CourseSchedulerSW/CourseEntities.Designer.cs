//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CourseSchedulerModel", "FK_CLASSROOM_FACULTY", "FACULTY", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CourseSchedulerSW.FACULTY), "CLASSROOM", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CourseSchedulerSW.CLASSROOM), true)]
[assembly: EdmRelationshipAttribute("CourseSchedulerModel", "FK_COURSE_DEPARTMENT", "DEPARTMENT", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CourseSchedulerSW.DEPARTMENT), "COURSE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CourseSchedulerSW.COURSE), true)]
[assembly: EdmRelationshipAttribute("CourseSchedulerModel", "FK_DEPARTMENTCOURSE_COURSE", "COURSE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CourseSchedulerSW.COURSE), "DEPARTMENTCOURSE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CourseSchedulerSW.DEPARTMENTCOURSE), true)]
[assembly: EdmRelationshipAttribute("CourseSchedulerModel", "FK_SECTION_COURSE", "COURSE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CourseSchedulerSW.COURSE), "SECTION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CourseSchedulerSW.SECTION), true)]
[assembly: EdmRelationshipAttribute("CourseSchedulerModel", "FK_DEPARTMENT_FACULTY", "FACULTY", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CourseSchedulerSW.FACULTY), "DEPARTMENT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CourseSchedulerSW.DEPARTMENT), true)]
[assembly: EdmRelationshipAttribute("CourseSchedulerModel", "FK_DEPARTMENTCOURSE_DEPARTMENT", "DEPARTMENT", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CourseSchedulerSW.DEPARTMENT), "DEPARTMENTCOURSE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CourseSchedulerSW.DEPARTMENTCOURSE), true)]
[assembly: EdmRelationshipAttribute("CourseSchedulerModel", "FK_PROFESSORSECTION_PROFESSOR", "PROFESSOR", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CourseSchedulerSW.PROFESSOR), "PROFESSORSECTION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CourseSchedulerSW.PROFESSORSECTION), true)]
[assembly: EdmRelationshipAttribute("CourseSchedulerModel", "FK_PROFESSORSECTION_SECTION", "SECTION", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CourseSchedulerSW.SECTION), "PROFESSORSECTION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CourseSchedulerSW.PROFESSORSECTION), true)]

#endregion

namespace CourseSchedulerSW
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CourseSchedulerEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CourseSchedulerEntities object using the connection string found in the 'CourseSchedulerEntities' section of the application configuration file.
        /// </summary>
        public CourseSchedulerEntities() : base("name=CourseSchedulerEntities", "CourseSchedulerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CourseSchedulerEntities object.
        /// </summary>
        public CourseSchedulerEntities(string connectionString) : base(connectionString, "CourseSchedulerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CourseSchedulerEntities object.
        /// </summary>
        public CourseSchedulerEntities(EntityConnection connection) : base(connection, "CourseSchedulerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CLASSROOM> CLASSROOM
        {
            get
            {
                if ((_CLASSROOM == null))
                {
                    _CLASSROOM = base.CreateObjectSet<CLASSROOM>("CLASSROOM");
                }
                return _CLASSROOM;
            }
        }
        private ObjectSet<CLASSROOM> _CLASSROOM;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<COURSE> COURSE
        {
            get
            {
                if ((_COURSE == null))
                {
                    _COURSE = base.CreateObjectSet<COURSE>("COURSE");
                }
                return _COURSE;
            }
        }
        private ObjectSet<COURSE> _COURSE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DEPARTMENT> DEPARTMENT
        {
            get
            {
                if ((_DEPARTMENT == null))
                {
                    _DEPARTMENT = base.CreateObjectSet<DEPARTMENT>("DEPARTMENT");
                }
                return _DEPARTMENT;
            }
        }
        private ObjectSet<DEPARTMENT> _DEPARTMENT;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DEPARTMENTCOURSE> DEPARTMENTCOURSE
        {
            get
            {
                if ((_DEPARTMENTCOURSE == null))
                {
                    _DEPARTMENTCOURSE = base.CreateObjectSet<DEPARTMENTCOURSE>("DEPARTMENTCOURSE");
                }
                return _DEPARTMENTCOURSE;
            }
        }
        private ObjectSet<DEPARTMENTCOURSE> _DEPARTMENTCOURSE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FACULTY> FACULTY
        {
            get
            {
                if ((_FACULTY == null))
                {
                    _FACULTY = base.CreateObjectSet<FACULTY>("FACULTY");
                }
                return _FACULTY;
            }
        }
        private ObjectSet<FACULTY> _FACULTY;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PROFESSOR> PROFESSOR
        {
            get
            {
                if ((_PROFESSOR == null))
                {
                    _PROFESSOR = base.CreateObjectSet<PROFESSOR>("PROFESSOR");
                }
                return _PROFESSOR;
            }
        }
        private ObjectSet<PROFESSOR> _PROFESSOR;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PROFESSORSECTION> PROFESSORSECTION
        {
            get
            {
                if ((_PROFESSORSECTION == null))
                {
                    _PROFESSORSECTION = base.CreateObjectSet<PROFESSORSECTION>("PROFESSORSECTION");
                }
                return _PROFESSORSECTION;
            }
        }
        private ObjectSet<PROFESSORSECTION> _PROFESSORSECTION;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SECTION> SECTION
        {
            get
            {
                if ((_SECTION == null))
                {
                    _SECTION = base.CreateObjectSet<SECTION>("SECTION");
                }
                return _SECTION;
            }
        }
        private ObjectSet<SECTION> _SECTION;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CLASSROOM EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCLASSROOM(CLASSROOM cLASSROOM)
        {
            base.AddObject("CLASSROOM", cLASSROOM);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the COURSE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCOURSE(COURSE cOURSE)
        {
            base.AddObject("COURSE", cOURSE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DEPARTMENT EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDEPARTMENT(DEPARTMENT dEPARTMENT)
        {
            base.AddObject("DEPARTMENT", dEPARTMENT);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DEPARTMENTCOURSE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDEPARTMENTCOURSE(DEPARTMENTCOURSE dEPARTMENTCOURSE)
        {
            base.AddObject("DEPARTMENTCOURSE", dEPARTMENTCOURSE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FACULTY EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFACULTY(FACULTY fACULTY)
        {
            base.AddObject("FACULTY", fACULTY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PROFESSOR EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPROFESSOR(PROFESSOR pROFESSOR)
        {
            base.AddObject("PROFESSOR", pROFESSOR);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PROFESSORSECTION EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPROFESSORSECTION(PROFESSORSECTION pROFESSORSECTION)
        {
            base.AddObject("PROFESSORSECTION", pROFESSORSECTION);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SECTION EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSECTION(SECTION sECTION)
        {
            base.AddObject("SECTION", sECTION);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CourseSchedulerModel", Name="CLASSROOM")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CLASSROOM : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CLASSROOM object.
        /// </summary>
        /// <param name="cLRO_ID">Initial value of the CLRO_ID property.</param>
        /// <param name="cLRO_NAME">Initial value of the CLRO_NAME property.</param>
        /// <param name="cLRO_FACULTYID">Initial value of the CLRO_FACULTYID property.</param>
        public static CLASSROOM CreateCLASSROOM(global::System.Int32 cLRO_ID, global::System.String cLRO_NAME, global::System.Int32 cLRO_FACULTYID)
        {
            CLASSROOM cLASSROOM = new CLASSROOM();
            cLASSROOM.CLRO_ID = cLRO_ID;
            cLASSROOM.CLRO_NAME = cLRO_NAME;
            cLASSROOM.CLRO_FACULTYID = cLRO_FACULTYID;
            return cLASSROOM;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CLRO_ID
        {
            get
            {
                return _CLRO_ID;
            }
            set
            {
                if (_CLRO_ID != value)
                {
                    OnCLRO_IDChanging(value);
                    ReportPropertyChanging("CLRO_ID");
                    _CLRO_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CLRO_ID");
                    OnCLRO_IDChanged();
                }
            }
        }
        private global::System.Int32 _CLRO_ID;
        partial void OnCLRO_IDChanging(global::System.Int32 value);
        partial void OnCLRO_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CLRO_NAME
        {
            get
            {
                return _CLRO_NAME;
            }
            set
            {
                OnCLRO_NAMEChanging(value);
                ReportPropertyChanging("CLRO_NAME");
                _CLRO_NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CLRO_NAME");
                OnCLRO_NAMEChanged();
            }
        }
        private global::System.String _CLRO_NAME;
        partial void OnCLRO_NAMEChanging(global::System.String value);
        partial void OnCLRO_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CLRO_FACULTYID
        {
            get
            {
                return _CLRO_FACULTYID;
            }
            set
            {
                OnCLRO_FACULTYIDChanging(value);
                ReportPropertyChanging("CLRO_FACULTYID");
                _CLRO_FACULTYID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CLRO_FACULTYID");
                OnCLRO_FACULTYIDChanged();
            }
        }
        private global::System.Int32 _CLRO_FACULTYID;
        partial void OnCLRO_FACULTYIDChanging(global::System.Int32 value);
        partial void OnCLRO_FACULTYIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CourseSchedulerModel", "FK_CLASSROOM_FACULTY", "FACULTY")]
        public FACULTY FACULTY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FACULTY>("CourseSchedulerModel.FK_CLASSROOM_FACULTY", "FACULTY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FACULTY>("CourseSchedulerModel.FK_CLASSROOM_FACULTY", "FACULTY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FACULTY> FACULTYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FACULTY>("CourseSchedulerModel.FK_CLASSROOM_FACULTY", "FACULTY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FACULTY>("CourseSchedulerModel.FK_CLASSROOM_FACULTY", "FACULTY", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CourseSchedulerModel", Name="COURSE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class COURSE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new COURSE object.
        /// </summary>
        /// <param name="cOUR_ID">Initial value of the COUR_ID property.</param>
        /// <param name="cOUR_CODE">Initial value of the COUR_CODE property.</param>
        /// <param name="cOUR_NAME">Initial value of the COUR_NAME property.</param>
        /// <param name="cOUR_SEMESTER">Initial value of the COUR_SEMESTER property.</param>
        /// <param name="cOUR_HOUR">Initial value of the COUR_HOUR property.</param>
        /// <param name="cOUR_DEPARTMENTID">Initial value of the COUR_DEPARTMENTID property.</param>
        public static COURSE CreateCOURSE(global::System.Int32 cOUR_ID, global::System.String cOUR_CODE, global::System.String cOUR_NAME, global::System.Int32 cOUR_SEMESTER, global::System.Int32 cOUR_HOUR, global::System.Int32 cOUR_DEPARTMENTID)
        {
            COURSE cOURSE = new COURSE();
            cOURSE.COUR_ID = cOUR_ID;
            cOURSE.COUR_CODE = cOUR_CODE;
            cOURSE.COUR_NAME = cOUR_NAME;
            cOURSE.COUR_SEMESTER = cOUR_SEMESTER;
            cOURSE.COUR_HOUR = cOUR_HOUR;
            cOURSE.COUR_DEPARTMENTID = cOUR_DEPARTMENTID;
            return cOURSE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 COUR_ID
        {
            get
            {
                return _COUR_ID;
            }
            set
            {
                if (_COUR_ID != value)
                {
                    OnCOUR_IDChanging(value);
                    ReportPropertyChanging("COUR_ID");
                    _COUR_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("COUR_ID");
                    OnCOUR_IDChanged();
                }
            }
        }
        private global::System.Int32 _COUR_ID;
        partial void OnCOUR_IDChanging(global::System.Int32 value);
        partial void OnCOUR_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COUR_CODE
        {
            get
            {
                return _COUR_CODE;
            }
            set
            {
                OnCOUR_CODEChanging(value);
                ReportPropertyChanging("COUR_CODE");
                _COUR_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("COUR_CODE");
                OnCOUR_CODEChanged();
            }
        }
        private global::System.String _COUR_CODE;
        partial void OnCOUR_CODEChanging(global::System.String value);
        partial void OnCOUR_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COUR_NAME
        {
            get
            {
                return _COUR_NAME;
            }
            set
            {
                OnCOUR_NAMEChanging(value);
                ReportPropertyChanging("COUR_NAME");
                _COUR_NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("COUR_NAME");
                OnCOUR_NAMEChanged();
            }
        }
        private global::System.String _COUR_NAME;
        partial void OnCOUR_NAMEChanging(global::System.String value);
        partial void OnCOUR_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String COUR_DESCRIPTION
        {
            get
            {
                return _COUR_DESCRIPTION;
            }
            set
            {
                OnCOUR_DESCRIPTIONChanging(value);
                ReportPropertyChanging("COUR_DESCRIPTION");
                _COUR_DESCRIPTION = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("COUR_DESCRIPTION");
                OnCOUR_DESCRIPTIONChanged();
            }
        }
        private global::System.String _COUR_DESCRIPTION;
        partial void OnCOUR_DESCRIPTIONChanging(global::System.String value);
        partial void OnCOUR_DESCRIPTIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 COUR_SEMESTER
        {
            get
            {
                return _COUR_SEMESTER;
            }
            set
            {
                OnCOUR_SEMESTERChanging(value);
                ReportPropertyChanging("COUR_SEMESTER");
                _COUR_SEMESTER = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("COUR_SEMESTER");
                OnCOUR_SEMESTERChanged();
            }
        }
        private global::System.Int32 _COUR_SEMESTER;
        partial void OnCOUR_SEMESTERChanging(global::System.Int32 value);
        partial void OnCOUR_SEMESTERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 COUR_HOUR
        {
            get
            {
                return _COUR_HOUR;
            }
            set
            {
                OnCOUR_HOURChanging(value);
                ReportPropertyChanging("COUR_HOUR");
                _COUR_HOUR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("COUR_HOUR");
                OnCOUR_HOURChanged();
            }
        }
        private global::System.Int32 _COUR_HOUR;
        partial void OnCOUR_HOURChanging(global::System.Int32 value);
        partial void OnCOUR_HOURChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 COUR_DEPARTMENTID
        {
            get
            {
                return _COUR_DEPARTMENTID;
            }
            set
            {
                OnCOUR_DEPARTMENTIDChanging(value);
                ReportPropertyChanging("COUR_DEPARTMENTID");
                _COUR_DEPARTMENTID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("COUR_DEPARTMENTID");
                OnCOUR_DEPARTMENTIDChanged();
            }
        }
        private global::System.Int32 _COUR_DEPARTMENTID;
        partial void OnCOUR_DEPARTMENTIDChanging(global::System.Int32 value);
        partial void OnCOUR_DEPARTMENTIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CourseSchedulerModel", "FK_COURSE_DEPARTMENT", "DEPARTMENT")]
        public DEPARTMENT DEPARTMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DEPARTMENT>("CourseSchedulerModel.FK_COURSE_DEPARTMENT", "DEPARTMENT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DEPARTMENT>("CourseSchedulerModel.FK_COURSE_DEPARTMENT", "DEPARTMENT").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DEPARTMENT> DEPARTMENTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DEPARTMENT>("CourseSchedulerModel.FK_COURSE_DEPARTMENT", "DEPARTMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DEPARTMENT>("CourseSchedulerModel.FK_COURSE_DEPARTMENT", "DEPARTMENT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CourseSchedulerModel", "FK_DEPARTMENTCOURSE_COURSE", "DEPARTMENTCOURSE")]
        public EntityCollection<DEPARTMENTCOURSE> DEPARTMENTCOURSE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DEPARTMENTCOURSE>("CourseSchedulerModel.FK_DEPARTMENTCOURSE_COURSE", "DEPARTMENTCOURSE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DEPARTMENTCOURSE>("CourseSchedulerModel.FK_DEPARTMENTCOURSE_COURSE", "DEPARTMENTCOURSE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CourseSchedulerModel", "FK_SECTION_COURSE", "SECTION")]
        public EntityCollection<SECTION> SECTION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SECTION>("CourseSchedulerModel.FK_SECTION_COURSE", "SECTION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SECTION>("CourseSchedulerModel.FK_SECTION_COURSE", "SECTION", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CourseSchedulerModel", Name="DEPARTMENT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DEPARTMENT : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DEPARTMENT object.
        /// </summary>
        /// <param name="dEPA_ID">Initial value of the DEPA_ID property.</param>
        /// <param name="dEPA_NAME">Initial value of the DEPA_NAME property.</param>
        /// <param name="dEPA_FACULTYID">Initial value of the DEPA_FACULTYID property.</param>
        public static DEPARTMENT CreateDEPARTMENT(global::System.Int32 dEPA_ID, global::System.String dEPA_NAME, global::System.Int32 dEPA_FACULTYID)
        {
            DEPARTMENT dEPARTMENT = new DEPARTMENT();
            dEPARTMENT.DEPA_ID = dEPA_ID;
            dEPARTMENT.DEPA_NAME = dEPA_NAME;
            dEPARTMENT.DEPA_FACULTYID = dEPA_FACULTYID;
            return dEPARTMENT;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DEPA_ID
        {
            get
            {
                return _DEPA_ID;
            }
            set
            {
                if (_DEPA_ID != value)
                {
                    OnDEPA_IDChanging(value);
                    ReportPropertyChanging("DEPA_ID");
                    _DEPA_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DEPA_ID");
                    OnDEPA_IDChanged();
                }
            }
        }
        private global::System.Int32 _DEPA_ID;
        partial void OnDEPA_IDChanging(global::System.Int32 value);
        partial void OnDEPA_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DEPA_NAME
        {
            get
            {
                return _DEPA_NAME;
            }
            set
            {
                OnDEPA_NAMEChanging(value);
                ReportPropertyChanging("DEPA_NAME");
                _DEPA_NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DEPA_NAME");
                OnDEPA_NAMEChanged();
            }
        }
        private global::System.String _DEPA_NAME;
        partial void OnDEPA_NAMEChanging(global::System.String value);
        partial void OnDEPA_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DEPA_FACULTYID
        {
            get
            {
                return _DEPA_FACULTYID;
            }
            set
            {
                OnDEPA_FACULTYIDChanging(value);
                ReportPropertyChanging("DEPA_FACULTYID");
                _DEPA_FACULTYID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEPA_FACULTYID");
                OnDEPA_FACULTYIDChanged();
            }
        }
        private global::System.Int32 _DEPA_FACULTYID;
        partial void OnDEPA_FACULTYIDChanging(global::System.Int32 value);
        partial void OnDEPA_FACULTYIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CourseSchedulerModel", "FK_COURSE_DEPARTMENT", "COURSE")]
        public EntityCollection<COURSE> COURSE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<COURSE>("CourseSchedulerModel.FK_COURSE_DEPARTMENT", "COURSE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<COURSE>("CourseSchedulerModel.FK_COURSE_DEPARTMENT", "COURSE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CourseSchedulerModel", "FK_DEPARTMENT_FACULTY", "FACULTY")]
        public FACULTY FACULTY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FACULTY>("CourseSchedulerModel.FK_DEPARTMENT_FACULTY", "FACULTY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FACULTY>("CourseSchedulerModel.FK_DEPARTMENT_FACULTY", "FACULTY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FACULTY> FACULTYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FACULTY>("CourseSchedulerModel.FK_DEPARTMENT_FACULTY", "FACULTY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FACULTY>("CourseSchedulerModel.FK_DEPARTMENT_FACULTY", "FACULTY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CourseSchedulerModel", "FK_DEPARTMENTCOURSE_DEPARTMENT", "DEPARTMENTCOURSE")]
        public EntityCollection<DEPARTMENTCOURSE> DEPARTMENTCOURSE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DEPARTMENTCOURSE>("CourseSchedulerModel.FK_DEPARTMENTCOURSE_DEPARTMENT", "DEPARTMENTCOURSE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DEPARTMENTCOURSE>("CourseSchedulerModel.FK_DEPARTMENTCOURSE_DEPARTMENT", "DEPARTMENTCOURSE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CourseSchedulerModel", Name="DEPARTMENTCOURSE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DEPARTMENTCOURSE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DEPARTMENTCOURSE object.
        /// </summary>
        /// <param name="dECO_ID">Initial value of the DECO_ID property.</param>
        /// <param name="dECO_DEPARTMENTID">Initial value of the DECO_DEPARTMENTID property.</param>
        /// <param name="dECO_COURSEID">Initial value of the DECO_COURSEID property.</param>
        public static DEPARTMENTCOURSE CreateDEPARTMENTCOURSE(global::System.Int32 dECO_ID, global::System.Int32 dECO_DEPARTMENTID, global::System.Int32 dECO_COURSEID)
        {
            DEPARTMENTCOURSE dEPARTMENTCOURSE = new DEPARTMENTCOURSE();
            dEPARTMENTCOURSE.DECO_ID = dECO_ID;
            dEPARTMENTCOURSE.DECO_DEPARTMENTID = dECO_DEPARTMENTID;
            dEPARTMENTCOURSE.DECO_COURSEID = dECO_COURSEID;
            return dEPARTMENTCOURSE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DECO_ID
        {
            get
            {
                return _DECO_ID;
            }
            set
            {
                if (_DECO_ID != value)
                {
                    OnDECO_IDChanging(value);
                    ReportPropertyChanging("DECO_ID");
                    _DECO_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DECO_ID");
                    OnDECO_IDChanged();
                }
            }
        }
        private global::System.Int32 _DECO_ID;
        partial void OnDECO_IDChanging(global::System.Int32 value);
        partial void OnDECO_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DECO_DEPARTMENTID
        {
            get
            {
                return _DECO_DEPARTMENTID;
            }
            set
            {
                OnDECO_DEPARTMENTIDChanging(value);
                ReportPropertyChanging("DECO_DEPARTMENTID");
                _DECO_DEPARTMENTID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DECO_DEPARTMENTID");
                OnDECO_DEPARTMENTIDChanged();
            }
        }
        private global::System.Int32 _DECO_DEPARTMENTID;
        partial void OnDECO_DEPARTMENTIDChanging(global::System.Int32 value);
        partial void OnDECO_DEPARTMENTIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DECO_COURSEID
        {
            get
            {
                return _DECO_COURSEID;
            }
            set
            {
                OnDECO_COURSEIDChanging(value);
                ReportPropertyChanging("DECO_COURSEID");
                _DECO_COURSEID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DECO_COURSEID");
                OnDECO_COURSEIDChanged();
            }
        }
        private global::System.Int32 _DECO_COURSEID;
        partial void OnDECO_COURSEIDChanging(global::System.Int32 value);
        partial void OnDECO_COURSEIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CourseSchedulerModel", "FK_DEPARTMENTCOURSE_COURSE", "COURSE")]
        public COURSE COURSE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COURSE>("CourseSchedulerModel.FK_DEPARTMENTCOURSE_COURSE", "COURSE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COURSE>("CourseSchedulerModel.FK_DEPARTMENTCOURSE_COURSE", "COURSE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<COURSE> COURSEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COURSE>("CourseSchedulerModel.FK_DEPARTMENTCOURSE_COURSE", "COURSE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<COURSE>("CourseSchedulerModel.FK_DEPARTMENTCOURSE_COURSE", "COURSE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CourseSchedulerModel", "FK_DEPARTMENTCOURSE_DEPARTMENT", "DEPARTMENT")]
        public DEPARTMENT DEPARTMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DEPARTMENT>("CourseSchedulerModel.FK_DEPARTMENTCOURSE_DEPARTMENT", "DEPARTMENT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DEPARTMENT>("CourseSchedulerModel.FK_DEPARTMENTCOURSE_DEPARTMENT", "DEPARTMENT").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DEPARTMENT> DEPARTMENTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DEPARTMENT>("CourseSchedulerModel.FK_DEPARTMENTCOURSE_DEPARTMENT", "DEPARTMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DEPARTMENT>("CourseSchedulerModel.FK_DEPARTMENTCOURSE_DEPARTMENT", "DEPARTMENT", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CourseSchedulerModel", Name="FACULTY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FACULTY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FACULTY object.
        /// </summary>
        /// <param name="fACU_ID">Initial value of the FACU_ID property.</param>
        /// <param name="fACU_NAME">Initial value of the FACU_NAME property.</param>
        public static FACULTY CreateFACULTY(global::System.Int32 fACU_ID, global::System.String fACU_NAME)
        {
            FACULTY fACULTY = new FACULTY();
            fACULTY.FACU_ID = fACU_ID;
            fACULTY.FACU_NAME = fACU_NAME;
            return fACULTY;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FACU_ID
        {
            get
            {
                return _FACU_ID;
            }
            set
            {
                if (_FACU_ID != value)
                {
                    OnFACU_IDChanging(value);
                    ReportPropertyChanging("FACU_ID");
                    _FACU_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FACU_ID");
                    OnFACU_IDChanged();
                }
            }
        }
        private global::System.Int32 _FACU_ID;
        partial void OnFACU_IDChanging(global::System.Int32 value);
        partial void OnFACU_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FACU_NAME
        {
            get
            {
                return _FACU_NAME;
            }
            set
            {
                OnFACU_NAMEChanging(value);
                ReportPropertyChanging("FACU_NAME");
                _FACU_NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FACU_NAME");
                OnFACU_NAMEChanged();
            }
        }
        private global::System.String _FACU_NAME;
        partial void OnFACU_NAMEChanging(global::System.String value);
        partial void OnFACU_NAMEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CourseSchedulerModel", "FK_CLASSROOM_FACULTY", "CLASSROOM")]
        public EntityCollection<CLASSROOM> CLASSROOM
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CLASSROOM>("CourseSchedulerModel.FK_CLASSROOM_FACULTY", "CLASSROOM");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CLASSROOM>("CourseSchedulerModel.FK_CLASSROOM_FACULTY", "CLASSROOM", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CourseSchedulerModel", "FK_DEPARTMENT_FACULTY", "DEPARTMENT")]
        public EntityCollection<DEPARTMENT> DEPARTMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DEPARTMENT>("CourseSchedulerModel.FK_DEPARTMENT_FACULTY", "DEPARTMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DEPARTMENT>("CourseSchedulerModel.FK_DEPARTMENT_FACULTY", "DEPARTMENT", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CourseSchedulerModel", Name="PROFESSOR")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PROFESSOR : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PROFESSOR object.
        /// </summary>
        /// <param name="pROF_ID">Initial value of the PROF_ID property.</param>
        /// <param name="pROF_NAME">Initial value of the PROF_NAME property.</param>
        public static PROFESSOR CreatePROFESSOR(global::System.Int32 pROF_ID, global::System.String pROF_NAME)
        {
            PROFESSOR pROFESSOR = new PROFESSOR();
            pROFESSOR.PROF_ID = pROF_ID;
            pROFESSOR.PROF_NAME = pROF_NAME;
            return pROFESSOR;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PROF_ID
        {
            get
            {
                return _PROF_ID;
            }
            set
            {
                if (_PROF_ID != value)
                {
                    OnPROF_IDChanging(value);
                    ReportPropertyChanging("PROF_ID");
                    _PROF_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PROF_ID");
                    OnPROF_IDChanged();
                }
            }
        }
        private global::System.Int32 _PROF_ID;
        partial void OnPROF_IDChanging(global::System.Int32 value);
        partial void OnPROF_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PROF_NAME
        {
            get
            {
                return _PROF_NAME;
            }
            set
            {
                OnPROF_NAMEChanging(value);
                ReportPropertyChanging("PROF_NAME");
                _PROF_NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PROF_NAME");
                OnPROF_NAMEChanged();
            }
        }
        private global::System.String _PROF_NAME;
        partial void OnPROF_NAMEChanging(global::System.String value);
        partial void OnPROF_NAMEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CourseSchedulerModel", "FK_PROFESSORSECTION_PROFESSOR", "PROFESSORSECTION")]
        public EntityCollection<PROFESSORSECTION> PROFESSORSECTION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PROFESSORSECTION>("CourseSchedulerModel.FK_PROFESSORSECTION_PROFESSOR", "PROFESSORSECTION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PROFESSORSECTION>("CourseSchedulerModel.FK_PROFESSORSECTION_PROFESSOR", "PROFESSORSECTION", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CourseSchedulerModel", Name="PROFESSORSECTION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PROFESSORSECTION : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PROFESSORSECTION object.
        /// </summary>
        /// <param name="pRSE_ID">Initial value of the PRSE_ID property.</param>
        /// <param name="pRSE_PROFESSORID">Initial value of the PRSE_PROFESSORID property.</param>
        /// <param name="pRSE_SECTIONID">Initial value of the PRSE_SECTIONID property.</param>
        /// <param name="pRSE_DAY">Initial value of the PRSE_DAY property.</param>
        /// <param name="pRSE_HOUR">Initial value of the PRSE_HOUR property.</param>
        public static PROFESSORSECTION CreatePROFESSORSECTION(global::System.Int32 pRSE_ID, global::System.Int32 pRSE_PROFESSORID, global::System.Int32 pRSE_SECTIONID, global::System.Int32 pRSE_DAY, global::System.Int32 pRSE_HOUR)
        {
            PROFESSORSECTION pROFESSORSECTION = new PROFESSORSECTION();
            pROFESSORSECTION.PRSE_ID = pRSE_ID;
            pROFESSORSECTION.PRSE_PROFESSORID = pRSE_PROFESSORID;
            pROFESSORSECTION.PRSE_SECTIONID = pRSE_SECTIONID;
            pROFESSORSECTION.PRSE_DAY = pRSE_DAY;
            pROFESSORSECTION.PRSE_HOUR = pRSE_HOUR;
            return pROFESSORSECTION;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PRSE_ID
        {
            get
            {
                return _PRSE_ID;
            }
            set
            {
                if (_PRSE_ID != value)
                {
                    OnPRSE_IDChanging(value);
                    ReportPropertyChanging("PRSE_ID");
                    _PRSE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PRSE_ID");
                    OnPRSE_IDChanged();
                }
            }
        }
        private global::System.Int32 _PRSE_ID;
        partial void OnPRSE_IDChanging(global::System.Int32 value);
        partial void OnPRSE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PRSE_PROFESSORID
        {
            get
            {
                return _PRSE_PROFESSORID;
            }
            set
            {
                OnPRSE_PROFESSORIDChanging(value);
                ReportPropertyChanging("PRSE_PROFESSORID");
                _PRSE_PROFESSORID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PRSE_PROFESSORID");
                OnPRSE_PROFESSORIDChanged();
            }
        }
        private global::System.Int32 _PRSE_PROFESSORID;
        partial void OnPRSE_PROFESSORIDChanging(global::System.Int32 value);
        partial void OnPRSE_PROFESSORIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PRSE_SECTIONID
        {
            get
            {
                return _PRSE_SECTIONID;
            }
            set
            {
                OnPRSE_SECTIONIDChanging(value);
                ReportPropertyChanging("PRSE_SECTIONID");
                _PRSE_SECTIONID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PRSE_SECTIONID");
                OnPRSE_SECTIONIDChanged();
            }
        }
        private global::System.Int32 _PRSE_SECTIONID;
        partial void OnPRSE_SECTIONIDChanging(global::System.Int32 value);
        partial void OnPRSE_SECTIONIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PRSE_DAY
        {
            get
            {
                return _PRSE_DAY;
            }
            set
            {
                OnPRSE_DAYChanging(value);
                ReportPropertyChanging("PRSE_DAY");
                _PRSE_DAY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PRSE_DAY");
                OnPRSE_DAYChanged();
            }
        }
        private global::System.Int32 _PRSE_DAY;
        partial void OnPRSE_DAYChanging(global::System.Int32 value);
        partial void OnPRSE_DAYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PRSE_HOUR
        {
            get
            {
                return _PRSE_HOUR;
            }
            set
            {
                OnPRSE_HOURChanging(value);
                ReportPropertyChanging("PRSE_HOUR");
                _PRSE_HOUR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PRSE_HOUR");
                OnPRSE_HOURChanged();
            }
        }
        private global::System.Int32 _PRSE_HOUR;
        partial void OnPRSE_HOURChanging(global::System.Int32 value);
        partial void OnPRSE_HOURChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CourseSchedulerModel", "FK_PROFESSORSECTION_PROFESSOR", "PROFESSOR")]
        public PROFESSOR PROFESSOR
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PROFESSOR>("CourseSchedulerModel.FK_PROFESSORSECTION_PROFESSOR", "PROFESSOR").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PROFESSOR>("CourseSchedulerModel.FK_PROFESSORSECTION_PROFESSOR", "PROFESSOR").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PROFESSOR> PROFESSORReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PROFESSOR>("CourseSchedulerModel.FK_PROFESSORSECTION_PROFESSOR", "PROFESSOR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PROFESSOR>("CourseSchedulerModel.FK_PROFESSORSECTION_PROFESSOR", "PROFESSOR", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CourseSchedulerModel", "FK_PROFESSORSECTION_SECTION", "SECTION")]
        public SECTION SECTION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SECTION>("CourseSchedulerModel.FK_PROFESSORSECTION_SECTION", "SECTION").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SECTION>("CourseSchedulerModel.FK_PROFESSORSECTION_SECTION", "SECTION").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SECTION> SECTIONReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SECTION>("CourseSchedulerModel.FK_PROFESSORSECTION_SECTION", "SECTION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SECTION>("CourseSchedulerModel.FK_PROFESSORSECTION_SECTION", "SECTION", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CourseSchedulerModel", Name="SECTION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SECTION : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SECTION object.
        /// </summary>
        /// <param name="sECT_ID">Initial value of the SECT_ID property.</param>
        /// <param name="sECT_COURSEID">Initial value of the SECT_COURSEID property.</param>
        public static SECTION CreateSECTION(global::System.Int32 sECT_ID, global::System.Int32 sECT_COURSEID)
        {
            SECTION sECTION = new SECTION();
            sECTION.SECT_ID = sECT_ID;
            sECTION.SECT_COURSEID = sECT_COURSEID;
            return sECTION;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SECT_ID
        {
            get
            {
                return _SECT_ID;
            }
            set
            {
                if (_SECT_ID != value)
                {
                    OnSECT_IDChanging(value);
                    ReportPropertyChanging("SECT_ID");
                    _SECT_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SECT_ID");
                    OnSECT_IDChanged();
                }
            }
        }
        private global::System.Int32 _SECT_ID;
        partial void OnSECT_IDChanging(global::System.Int32 value);
        partial void OnSECT_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SECT_COURSEID
        {
            get
            {
                return _SECT_COURSEID;
            }
            set
            {
                OnSECT_COURSEIDChanging(value);
                ReportPropertyChanging("SECT_COURSEID");
                _SECT_COURSEID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SECT_COURSEID");
                OnSECT_COURSEIDChanged();
            }
        }
        private global::System.Int32 _SECT_COURSEID;
        partial void OnSECT_COURSEIDChanging(global::System.Int32 value);
        partial void OnSECT_COURSEIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CourseSchedulerModel", "FK_SECTION_COURSE", "COURSE")]
        public COURSE COURSE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COURSE>("CourseSchedulerModel.FK_SECTION_COURSE", "COURSE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COURSE>("CourseSchedulerModel.FK_SECTION_COURSE", "COURSE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<COURSE> COURSEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COURSE>("CourseSchedulerModel.FK_SECTION_COURSE", "COURSE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<COURSE>("CourseSchedulerModel.FK_SECTION_COURSE", "COURSE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CourseSchedulerModel", "FK_PROFESSORSECTION_SECTION", "PROFESSORSECTION")]
        public EntityCollection<PROFESSORSECTION> PROFESSORSECTION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PROFESSORSECTION>("CourseSchedulerModel.FK_PROFESSORSECTION_SECTION", "PROFESSORSECTION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PROFESSORSECTION>("CourseSchedulerModel.FK_PROFESSORSECTION_SECTION", "PROFESSORSECTION", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
